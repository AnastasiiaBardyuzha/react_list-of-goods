{"version":3,"sources":["components/Goods/Goods.js","components/Select/Select.js","components/Buttons/Buttons.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["Goods","goods","map","item","key","Select","onChange","numbers","length","values","Array","from","index","value","className","Buttons","reversed","sortedAlphabetically","reseted","sortedByLength","type","onClick","GoodsList","state","props","goodsList","isClicked","resetGoods","clicked","setState","prevState","reverse","sort","compare","a","b","selected","event","selectedLength","target","this","filteredGoods","filter","React","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"+TAGaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,QCA1BE,G,MAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACpCC,EAASC,MAAMC,KAAK,CAAEH,OAAQ,CAACD,KAAY,SAACJ,EAAMS,GAAP,OAAiBA,KAElE,OACE,4BAAQN,SAAUA,EAAUO,MAAOL,EAAQM,UAAU,UAClDL,EAAOP,KACN,SAACC,EACCS,GADF,OACY,4BAAQC,MAAOD,EAAQ,EAAGR,IAAKD,GAAOS,EAAQ,SCPrDG,G,KAAU,SAAC,GAAD,IACnBC,EADmB,EACnBA,SAAUC,EADS,EACTA,qBAAsBC,EADb,EACaA,QAASC,EADtB,EACsBA,eADtB,OAGrB,oCACE,4BACEC,KAAK,SACLN,UAAU,SACVO,QAASL,GAHX,WAOA,4BACEI,KAAK,SACLN,UAAU,SACVO,QAASJ,GAHX,uBAOA,4BACEG,KAAK,SACLN,UAAU,SACVO,QAASH,GAHX,SAOA,4BACEE,KAAK,SACLN,UAAU,SACVO,QAASF,GAHX,qBCtBSG,EAAb,2MACEC,MAAQ,CACNtB,MAAO,EAAKuB,MAAMC,UAClBC,WAAW,EACXC,WAAW,YAAK,EAAKH,MAAMC,WAC3BjB,OAAQ,GALZ,EAQEoB,QAAU,WACR,EAAKC,SAAS,CAAEH,WAAW,KAT/B,EAYEV,SAAW,WACT,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,MAAO,YAAI6B,EAAU7B,OAAO8B,eAdlC,EAkBEd,qBAAuB,WACrB,EAAKY,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,MAAO,YAAI6B,EAAU7B,OAAO+B,YApBlC,EAwBEb,eAAiB,WACf,SAASc,EAAQC,EAAGC,GAClB,OAAOD,EAAE1B,OAAS2B,EAAE3B,OAGtB,EAAKqB,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,MAAO,YAAI6B,EAAU7B,OAAO+B,KAAKC,QA9BvC,EAkCEf,QAAU,WACR,EAAKW,UAAS,SAAAC,GAAS,MAAK,CAC1B7B,MAAO6B,EAAUH,WAAYnB,OAAQ,OApC3C,EAwCE4B,SAAW,SAACC,GACV,IAAMC,GAAkBD,EAAME,OAAO1B,MAErC,EAAKgB,SAAS,CACZrB,OAAQ8B,KA5Cd,wEAgDY,IAAD,EAC8BE,KAAKjB,MAAlCtB,EADD,EACCA,MAAOyB,EADR,EACQA,UAAWlB,EADnB,EACmBA,OACpBiC,EAAgBxC,EAAMyC,QAAO,SAAAvC,GAAI,OAAIA,EAAKK,OAASA,KAEzD,OAAKkB,EAaH,oCACE,kBAAC,EAAD,CACEpB,SAAUkC,KAAKJ,SACf7B,QAASiC,KAAKjB,MAAMI,WAAWnB,OAC/BA,OAAQgC,KAAKjB,MAAMf,SAErB,kBAAC,EAAD,CACEQ,SAAUwB,KAAKxB,SACfC,qBAAsBuB,KAAKvB,qBAC3BC,QAASsB,KAAKtB,QACdC,eAAgBqB,KAAKrB,iBAEvB,kBAAC,EAAD,CAAOlB,MAAOwC,KAvBd,4BACErB,KAAK,SACLN,UAAU,SACVO,QAASmB,KAAKZ,SAHhB,aAtDR,GAA+Be,IAAMC,WCJ/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUaC,EAPH,kBACV,yBAAKhC,UAAU,OACb,qCACA,kBAAC,EAAD,CAAWW,UAAWoB,MChB1BE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.e4bc55ba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Goods = ({ goods }) => (\n  <ul>\n    {goods.map(item => <li key={item}>{item}</li>)}\n  </ul>\n);\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Select.css';\n\nexport const Select = ({ onChange, numbers, length }) => {\n  const values = Array.from({ length: [numbers] }, (item, index) => index);\n\n  return (\n    <select onChange={onChange} value={length} className=\"select\">\n      {values.map(\n        (item,\n          index) => <option value={index + 1} key={item}>{index + 1}</option>,\n      )}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  numbers: PropTypes.number.isRequired,\n  length: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Buttons.css';\n\nexport const Buttons = (\n  { reversed, sortedAlphabetically, reseted, sortedByLength },\n) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={reversed}\n    >\n      Reverse\n    </button>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={sortedAlphabetically}\n    >\n    Sort alphabetically\n    </button>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={reseted}\n    >\n    Reset\n    </button>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={sortedByLength}\n    >\n    Sort by length\n    </button>\n  </>\n);\n\nButtons.propTypes = {\n  reversed: PropTypes.func.isRequired,\n  sortedAlphabetically: PropTypes.func.isRequired,\n  reseted: PropTypes.func.isRequired,\n  sortedByLength: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Goods } from '../Goods/Goods';\nimport { Select } from '../Select/Select';\nimport { Buttons } from '../Buttons/Buttons';\nimport '../Buttons/Buttons.css';\n\nexport class GoodsList extends React.Component {\n  state = {\n    goods: this.props.goodsList,\n    isClicked: false,\n    resetGoods: [...this.props.goodsList],\n    length: 1,\n  }\n\n  clicked = () => {\n    this.setState({ isClicked: true });\n  }\n\n  reversed = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortedAlphabetically = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(),\n    }));\n  }\n\n  sortedByLength = () => {\n    function compare(a, b) {\n      return a.length - b.length;\n    }\n\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(compare),\n    }));\n  }\n\n  reseted = () => {\n    this.setState(prevState => ({\n      goods: prevState.resetGoods, length: 1,\n    }));\n  }\n\n  selected = (event) => {\n    const selectedLength = +event.target.value;\n\n    this.setState({\n      length: selectedLength,\n    });\n  }\n\n  render() {\n    const { goods, isClicked, length } = this.state;\n    const filteredGoods = goods.filter(item => item.length > length);\n\n    if (!isClicked) {\n      return (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.clicked}\n        >\n          Start\n        </button>\n      );\n    }\n\n    return (\n      <>\n        <Select\n          onChange={this.selected}\n          numbers={this.state.resetGoods.length}\n          length={this.state.length}\n        />\n        <Buttons\n          reversed={this.reversed}\n          sortedAlphabetically={this.sortedAlphabetically}\n          reseted={this.reseted}\n          sortedByLength={this.sortedByLength}\n        />\n        <Goods goods={filteredGoods} />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goodsList={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}